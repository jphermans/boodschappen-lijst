import{q as t,c as e,w as a,e as r,k as s,l as o,d as i}from"./firebase-DuvuO4R-.js";import{g as n,i as c}from"./index-DN0dzhwU.js";import"./vendor-CjuAVZ7F.js";import"./ui-CiILanuQ.js";const d=new class{constructor(){this.backupVersion="3.0"}async exportFirebaseData(){try{const s=n();if(!s)throw new Error("User not authenticated");const o=t(e(c,"shoppingLists"),a("creatorId","==",s)),i=await r(o),d=[];for(const t of i.docs){const e=t.data(),a={id:t.id,name:e.name,items:e.items?e.items.map(t=>({id:t.id,name:t.name,completed:t.completed,addedAt:t.addedAt?.toDate?.()?.toISOString()||new Date(t.addedAt).toISOString(),addedBy:t.addedBy})):[],creatorName:e.creatorName,creatorId:e.creatorId,deviceUID:e.deviceUID,sharedWith:e.sharedWith||[],createdAt:e.createdAt?.toDate?.()?.toISOString()||new Date(e.createdAt).toISOString(),updatedAt:e.updatedAt?.toDate?.()?.toISOString()||new Date(e.updatedAt).toISOString(),isCreator:!0};d.push(a)}return{timestamp:Date.now(),version:this.backupVersion,userId:s,lists:d,metadata:{totalLists:d.length,ownLists:d.length,sharedLists:0,totalItems:d.reduce((t,e)=>t+(e.items?.length||0),0)}}}catch(s){throw s}}async importFirebaseData(d,p={}){try{const{importOwnLists:h=!0,importSharedLists:l=!1,skipDuplicates:w=!0}=p;if(!d||!d.lists)throw new Error("Invalid backup data");const u=n();if(!u)throw new Error("User not authenticated");d.userId;const I=s(c);let f=0,b=0;if(h&&d.lists)for(const s of d.lists)try{if(w){const o=t(e(c,"shoppingLists"),a("creatorId","==",u),a("name","==",s.name));if(!(await r(o)).empty){b++;continue}}const n={name:s.name,items:s.items||[],creatorName:s.creatorName,creatorId:u,deviceUID:u,sharedWith:s.sharedWith||[],createdAt:o(),updatedAt:o()},d=i(e(c,"shoppingLists"));I.set(d,n),f++}catch(m){}return f>0&&await I.commit(),{success:!0,imported:f,skipped:b,total:(d.lists?.length||0)+(d.sharedLists?.length||0)}}catch(m){throw m}}async createDownloadableBackup(){try{const t=await this.exportFirebaseData(),e=JSON.stringify(t,null,2),a=new Blob([e],{type:"application/json"}),r=URL.createObjectURL(a),s=document.createElement("a");return s.href=r,s.download=`boodschappenlijst-backup-${(new Date).toISOString().split("T")[0]}.json`,document.body.appendChild(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(r),t}catch(t){throw t}}async restoreFromFile(t,e={}){try{const a=await t.text(),r=JSON.parse(a);if(!r.lists||!r.version)throw new Error("Invalid backup file format");return await this.importFirebaseData(r,e)}catch(a){throw a}}};export{d as firebaseBackup};
